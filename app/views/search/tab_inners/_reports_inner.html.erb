
<div id="search-reports-inner" class="width-95-percent">
  <h4>Reports</h4>
  <p>You can add other directives to these reports.
  e.g. show-instances:, limit: 10, name: acacia </p>
  <h5>Orth. Vars.</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'Names',
       search_string: "is-orth-var-with-no-orth-var-instances:",
       explanation: %Q(Orth. var. with no orth. var. instance.)},
      {search_target: "Names",
       search_string: "is-orth-var-and-sec-ref-first:",
       explanation:
       %Q(Orth. var. names with first instance a secondary reference.)},
      {search_target: "Names",
       search_string: "is-orth-var-and-non-primary-ref-first:",
       explanation:
       %Q(Orth. var. names with first standalone instance not a primary
       reference.)},
      {search_target: "Names",
       search_string:
       "is-orth-var-and-non-primary-sec-ref-first:",
       explanation:
       %Q(Orth. var. names with at least one instance that meets these
       conditions: <br> - it is based on the earliest reference for that name,
       and <br> - it is neither a primary nor a secondary instance.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string],
                  search_path(query_string: val[:search_string],
                              query_target: val[:search_target]),
                  class:'blue',
                  title: "Run the report.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>

<h5>Reference type</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'References',
       search_string: "parent-ref-wrong-child-type:",
       explanation: %Q(References that contain other reference of the
       wrong type. e.g. Book containing paper)},
      {search_target: 'References',
       search_string: "rt: journal parent-ref-wrong-child-type:",
       explanation: %Q(Journals that contain a reference that is not a paper.)},
      {search_target: 'References',
       search_string: "not-type: paper parent-type: journal",
       explanation: %Q(Non-papers that are children of Journals.)},
      {search_target: 'References',
       search_string: "type: unknown parent-type: journal",
       explanation: %Q(Unknowns that are children of Journals.)},
      {search_target: 'References',
       search_string: "not-type: paper not-type: unknown parent-type: journal",
       explanation: %Q(Neither paper nor unknown but child of Journal.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string],
                  search_path(query_string: val[:search_string],
                              query_target: val[:search_target]),
                  class:'blue',
                  title: "Run the report.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>

<h5>Other</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'Names',
       search_string: "is-a-parent: has-no-instances:",
       explanation: %Q(Names that have children but no instances.)},
      {search_target: "Names",
       search_string: "autonym-name-mismatch:",
       explanation:
       %Q(Autonyms for which the final epithet is not identical to the final \
       epithet of the parent name.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string],
                  search_path(query_string: val[:search_string],
                              query_target: val[:search_target]),
                  class:'blue',
                  title: "Run the report.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>


</div>

