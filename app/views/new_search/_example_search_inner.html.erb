<div id="example-search-inner" class="">


<br>
<% excc = %Q(<span class="purple" title="Excluding common and cultivar names by default.">EXCC</span>) %>
<% incc = %Q(<span class="purple" title="Including common and cultivar names.">INCC</span>) %>
<h4 class="">List names</h4>
<table class="example-searches table table-striped">
  <% [{search_string: "acacia*",explanation: %Q(List names starting with "acacia".  Bare search is on names. 100 records is the default.)},
      {search_string: "acacia* type:*", 
       explanation: %Q(Also include common and cultivar names which are normally excluded (i.e. #{excc.sub(/\./,'')}).)},
      {search_string: "acacia", explanation: %Q(Find no names exactly matching "acacia".  A case for using wildcards. #{excc})},
      {search_string: "acacia type:*", explanation: %Q(Find names exactly matching "acacia", including common and cultivar (i.e. #{incc.sub(/\./,'')}).)},
      {search_string: "acacia type:common,cultivar", explanation: %Q(Find just common or cultivar names exactly matching "acacia". #{incc})},
      {search_string: "acacia* rank: genus", explanation: %Q(List any name starting with "acacia" that is a genus. #{excc})},
      {search_string: "acacia* rank: genus is-not-a-duplicate:", explanation: %Q(List any name starting with "acacia" that is a genus and is not a duplicate. #{excc})}
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>
<h4 class="inline-block">Count names</h4><span> - turn a list into a count</span>
<table class="example-searches table table-striped">
  <% [{search_string: "count acacia*",explanation: %Q(Count names starting with "acacia". #{excc})},
      {search_string: "count rank: genus is-not-a-duplicate:", explanation: %Q(Count non-duplicate genera. #{excc})},
      {search_string: "count acacia* type:*", explanation: %Q(Count names starting with "acacia". #{incc})},
      {search_string: "count acacia* type:common,cultivar", explanation: %Q(Count common or cultivar names starting with "acacia". #{incc})},
      {search_string: "count is-a-duplicate:", explanation: %Q(Count duplicate names. #{excc})},
      {search_string: "count comments:*", explanation: %Q(Count commented names turning a text field into an assertion. #{excc})}
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="inline-block">Limit list size</h4><span> - set the number of records</span>
<table class="example-searches table table-striped">
  <% [{search_string: "5 acacia*",explanation: %Q(List 5 names starting with "acacia". #{excc})},
      {search_string: "50 acacia*", explanation: %Q(List 50 names starting with "acacia". #{excc})},
      {search_string: "1000 acacia*", explanation: %Q(List 1000 names starting with "acacia". #{excc}. <span class="red">1000 is the maximum.</span>)},
      {search_string: "all acacia*", explanation: %Q(List 1000 names starting with "acacia". #{excc}. <span class="red">1000 is the maximum.</span>)}
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="">List references</h4>
<table class="example-searches table table-striped">
  <% [{search_string: "ref",explanation: %Q(Start with "ref" for references. 100 listed by default.)},
      {search_string: "10 ref",explanation: %Q(Control the number of references listed.)},
      {search_string: "ref nuytsia*", explanation: %Q(Reference searches match on citation by default.  Trailing wildcards are important but not always enough.)},
      {search_string: "ref *nuytsia*", explanation: %Q(Leading wildcards may be slower but necessary.)},
      {search_string: "ref title:nuytsia", explanation: %Q(Search on title.)},
      {search_string: "ref citation:*nuytsia*", explanation: %Q(Refer explicitly to the citation field.)},
      {search_string: "ref *nuytsia* type:journal", explanation: %Q(Restrict by type.)},
      {search_string: "ref *nuytsia* ty:journal ti:nuytsia", explanation: %Q(Use field abbreviations.)}
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="">Count references</h4>
<table class="example-searches table table-striped">
  <% [{search_string: "count ref",explanation: %Q(Start with "count ref" to count references.)},
      {search_string: "count ref *nuytsia*", explanation: %Q(Counting without listing should be faster than listing for large sets.)},
      {search_string: "count ref type:journal", explanation: %Q(Because it's faster, counting may suit different types of searches.)},
      {search_string: "count ref type:journal is-not-a-parent:", explanation: %Q(Use an assertion.)},
      {search_string: "count ref type:paper has-no-parent:", explanation: %Q(Use a different assertion)},
      {search_string: "count ref type:journal is-not-a-parent: is-a-duplicate:", explanation: %Q(Combine assertions.)}
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="">Count instances</h4>
<table class="example-searches table table-striped">
  <% [{search_string: "count instance",explanation: %Q(Start with "count instance" to count instances.)},
      {search_string: "count instance acacia*", explanation: %Q(Counting without listing should be faster than listing for large sets.)},
      {search_string: "count instance type:basionym", explanation: %Q(Count by type e.g. basionyms.)},
      {search_string: "count instance type:comb. nov.", explanation: %Q(Count comb. novs.)},
      {search_string: "count instance acacia* type:basionym", explanation: %Q(Count by name and type e.g. basionyms.)},
      {search_string: "count instance acacia* type:comb. nov.", explanation: %Q(Count by name and type e.g. comb. nov.)},
      {search_string: "count instance adnot:*", explanation: %Q(Count instances with an Adnot (comment).)},
      {search_string: "count instance adnot-by:*", explanation: %Q(Count instances with an Adnot (comment) by someone.)},
      {search_string: "count instance page:140", explanation: %Q(Count instances with page 140.)},
      {search_string: "count instance page:14*", explanation: %Q(Count instances with page 14*.)},
      {search_string: "count instance page:*fig*", explanation: %Q(Count instances with figure information.)},
      {search_string: "count instance page-qualifier:*", explanation: %Q(Count instances with extra page information.)},
      {search_string: "count instance note-key:apc dist.", explanation: %Q(Count instances with note key 'apc dist.'.)},
      {search_string: "count instance note:*intermediate*", explanation: %Q(Count instances where 'intermediate' is noted.)},
      {search_string: "count instance cites-an-instance:", explanation: %Q(Count instances that cite another instance.)}
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="">List authors</h4>
<table class="example-searches table table-striped">
  <% [{search_string: "author",explanation: %Q(Start with "author" to search authors. Lists will be ordered by name.)},
      {search_string: "author bentham*", explanation: %Q(Authors starting with "bentham".)},
      {search_string: "author *bentham*", explanation: %Q(Authors including "bentham".)},
      {search_string: "author *bentham* name: *hooker*", explanation: %Q(Authors including "bentham" and "hooker".)},
      {search_string: "author name: *bentham* name: *hooker*", explanation: %Q(Authors including "bentham" and "hooker".)},
      {search_string: "author full-name:*", explanation: %Q(Authors with full or extra name text.)},
      {search_string: "author comments:*", explanation: %Q(Count commented authors by turning a text field into an assertion.)},
      {search_string: "author comments-by:*", explanation: %Q(Count authors with a comment by someone.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="">Count authors</h4>
<table class="example-searches table table-striped">
  <% [{search_string: "count author",explanation: %Q(Start with "count author" to count authors.)},
      {search_string: "count author bentham*", explanation: %Q(Counting sets.)},
      {search_string: "count comments:*", explanation: %Q(Count commented authors by turning a text field into an assertion.)},
      {search_string: "count author comments-by:*", explanation: %Q(Count authors with a comment by someone.)},
      {search_string: "count author notes:*", explanation: %Q(Count authors with notes by turning a text field into an assertion.)},
      {search_string: "count author is-a-duplicate:", explanation: %Q(Count duplicate authors.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h4 class="">Defined searches</h4>
<table class="example-searches table table-striped">
  <% [
      {search_string: "instances-for-ref-id: 53841",explanation: %Q(Instances for a reference ID.)},
      {search_string: "1000 instances-for-ref-id: 53841",explanation: %Q(Instances for a reference ID, with limit 1000.)},
      {search_string: "instances-for-name-id: 242009",explanation: %Q(Instances for a name ID.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent"><a href="javascript:void(0)" 
           class="example-search width-100-percent" 
           title="Link to search">
           <span class="blue"><%= val[:search_string] %></span>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

</div>
